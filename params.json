{"name":"CoreDataEnvirSample","tagline":"A CoreData Envirement wrapper, use CoreData in convient way. It has been used in my works.","body":"CoreDataEnvir (2011-05-25)\r\n=============\r\n\r\nA CoreData Envirement wrapper, use CoreData in convient way. You can use it in concurrencyï¼Œrun seperate CoreDataEnvir instance on one thread.\r\n\r\n##First step:\r\n\t//Register your data base file name\r\n\t[CoreDataEnvir registDatabaseFileName:@\"db.sqlite\"];\r\n\t//Register your model file name(no extension)\r\n\t[CoreDataEnvir registModelFileName:@\"SampleModel\"];\r\n\r\n\r\n##On main thread:\r\n\r\n#Insert item:\r\n\tTeam *team = [Team insertItem];\r\n\tor\r\n\t[Team insertItemWith:^(Team *item) {\r\n\t\titem.name = [NSString stringWithFormat:@\"Nicholas\"];\r\n\t}];\r\n\t\r\n\t[[CoreDataEnvir instance] saveDataBase];\r\n\r\n#Fetch one item:\r\n\tTeam *team = (Team *)[Team lastItemWith:[NSPredicate predicateWithFormat:@\"name==nicholas\"]];\r\n\r\n#Fetch all items:\r\n\tNSArray *items = [Team itemsWith:[NSPredicate predicateWithFormat:@\"name==nicholas\"]];\r\n\r\n##If you want to run on other threads, follow this:\r\n\r\nThis method ([CoreDataEnvir instance]) will automatically creating new instance for non-main thread and uniq instance for main thread.\r\n\r\n\tdispatch_async(q2, ^{\r\n\t\tCoreDataEnvir *db = [CoreDataEnvir instance];\r\n\t\tfor (int i = 0; i < 500; i++) {\r\n\t\t\tTeam *team = (Team *)[Team lastItemWith:db predicate:[NSPredicate predicateWithFormat:@\"name==9\"]];\r\n\t\t\tif (team) {\r\n\t\t\t\t[db deleteDataItem:team];\r\n\t\t\t}else {\r\n\t\t\t\t[Team insertItemWith:db fillData:^(Team *item) {\r\n\t\t\t\t\titem.name = [NSString stringWithFormat:@\"9\"];\r\n\t\t\t\t}];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t[db saveDataBase];\r\n\t\t}\r\n\t});\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}